#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#@ load("@ytt:json", "json")
#@ debug = json.decode(data.values.config)["DEBUG"]

#@ name = json.decode(data.values.bom)["tinywww"]["containers"][0]["name"]
#@ version = json.decode(data.values.bom)["tinywww"]["containers"][0]["version"]
#@ image = name + ":" + version

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tinywww
  name: tinywww
  namespace: vmware-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tinywww
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: tinywww
    spec:
      containers:
      - image: #@ image
        imagePullPolicy: IfNotPresent
        name: tinywww
        ports:
          - containerPort: 8100
        resources:
          limits:
            memory: "56Mi"
            cpu: "100m"
        volumeMounts:
        - mountPath: /etc/issue
          name: issue
          readOnly: true
        - mountPath: /var/log/bootstrap.log
          name: bootstrap
          readOnly: true
        - name: auth
          readOnly: true
          mountPath: "/var/secrets"
      volumes:
      - name: issue
        hostPath:
          path: /etc/issue
      - name: bootstrap
        hostPath:
          #@ if debug == "True":
          path: /var/log/bootstrap-debug.log
          #@ else:
          path: /var/log/bootstrap.log
          #@ end
      - name: auth
        secret:
          secretName: basic-auth
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tinywww
  name: tinywww
  namespace: vmware-system
spec:
  ports:
  - port: 8100
    protocol: TCP
    targetPort: 8100
  selector:
    app: tinywww
  sessionAffinity: None
