#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#@ load("@ytt:json", "json")
#@ vcenter = json.decode(data.values.config)["VCENTER_SERVER"]
#@ vcenterUsername = json.decode(data.values.config)["VCENTER_USERNAME"]
#@ vcenterPassword = json.decode(data.values.config)["VCENTER_PASSWORD"]
#@ vcenterTls = json.decode(data.values.config)["VCENTER_DISABLE_TLS_VERIFICATION"]

#@ routerName = "vmware-event-router-config-knative-" + data.values.eventProvider

apiVersion: event-router.vmware.com/v1alpha1
eventProcessor:
  name: veba-knative
  type: knative
  knative:
    insecureSSL: false
    encoding: binary
    destination:
      ref:
        apiVersion: eventing.knative.dev/v1
        kind: Broker
        name: default
        namespace: vmware-functions
eventProvider:
  #@ if data.values.eventProvider == "vcenter":
  name: veba-vc-01
  type: vcenter
  vcenter:
    address: #@ "https://"+vcenter+"/sdk"
    auth:
      basicAuth:
        username: #@ vcenterUsername
        password: #@ vcenterPassword
      type: basic_auth
    #@ if vcenterTls == "True":
    insecureSSL: true
    #@ else:
    insecureSSL: false
    #@ end
    checkpoint: false
  #@ end
  #@ if data.values.eventProvider == "horizon":
  #@ horizon = json.decode(data.values.config)["HORIZON_SERVER"]
  #@ horizonDomain = json.decode(data.values.config)["HORIZON_DOMAIN"]
  #@ horizonUsername = json.decode(data.values.config)["HORIZON_USERNAME"]
  #@ horizonPassword = json.decode(data.values.config)["HORIZON_PASSWORD"]
  #@ horizonNoTLS = json.decode(data.values.config)["HORIZON_DISABLE_TLS_VERIFICATION"]
  name: veba-horizon-01
  type: horizon
  horizon:
    address: #@ "https://"+horizon
    auth:
      type: active_directory
      activeDirectoryAuth:
        domain: #@ horizonDomain
        username: #@ horizonUsername
        password: #@ horizonPassword
    #@ if horizonNoTLS == "True":
    insecureSSL: true
    #@ else:
    insecureSSL: false
    #@ end
  #@ end
  #@ if data.values.eventProvider == "webhook":
  #@ webhookUsername = json.decode(data.values.config)["WEBHOOK_USERNAME"]
  #@ webhookPassword = json.decode(data.values.config)["WEBHOOK_PASSWORD"]
  name: veba-webhook-01
  type: webhook
  webhook:
    bindAddress: 0.0.0.0:8080
    path: /webhook
    #@ if webhookUsername != "" and webhookPassword != "":
    auth:
      type: basic_auth
      basicAuth:
        username: #@ webhookUsername
        password: #@ webhookPassword
    #@ end
  #@ end
kind: RouterConfig
metadata:
  name: #@ routerName
metricsProvider:
  default:
    bindAddress: 0.0.0.0:8082
  name: veba-metrics
  type: default