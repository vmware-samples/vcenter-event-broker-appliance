#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#@ load("@ytt:json", "json")
#@ fqdn = json.decode(data.values.config)["HOSTNAME"]

#@ vebaUIUsername = json.decode(data.values.config)["ESCAPED_VCENTER_USERNAME_FOR_VEBA_UI"]
#@ vebaUIPassword = json.decode(data.values.config)["ESCAPED_VCENTER_PASSWORD_FOR_VEBA_UI"]
#@ webhookEnabled = json.decode(data.values.config)["WEBHOOK_ENABLED"]
#@ horizonEnabled = json.decode(data.values.config)["HORIZON_ENABLED"]

apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  annotations:
    kubernetes.io/ingress.class: contour-external
  labels:
    app: vmware
  name: event-router
  namespace: vmware-system
spec:
  routes:
  - conditions:
    - prefix: /status
    pathRewritePolicy:
      replacePrefix:
      - replacement: /status
    services:
    - name: tinywww
      port: 8100
  - conditions:
    - prefix: /bootstrap
    pathRewritePolicy:
      replacePrefix:
      - replacement: /bootstrap
    services:
    - name: tinywww
      port: 8100
  - conditions:
    - prefix: /stats/vcenter
    pathRewritePolicy:
      replacePrefix:
      - replacement: /stats
    services:
    - name: vmware-event-router-vcenter
      port: 8082
  #@ if webhookEnabled == "True":
  - conditions:
    - prefix: /stats/webhook
    pathRewritePolicy:
      replacePrefix:
      - replacement: /stats
    services:
    - name: vmware-event-router-webhook
      port: 8082
  - conditions:
    - prefix: /webhook
    pathRewritePolicy:
      replacePrefix:
      - replacement: /webhook
    services:
    - name: vmware-event-router-webhook
      port: 8080
  #@ end
  #@ if horizonEnabled == "True":
  - conditions:
    - prefix: /stats/horizon
    pathRewritePolicy:
      replacePrefix:
      - replacement: /stats
    services:
    - name: vmware-event-router-horizon
      port: 8082
  #@ end
  #@ if vebaUIUsername != "" and vebaUIPassword != "":
  - conditions:
    - prefix: /veba-ui
    services:
    - name: veba-ui
      port: 80
  #@ end
  virtualhost:
    fqdn: #@ fqdn
    tls:
      minimumProtocolVersion: "1.2"
      secretName: #@ data.values.secretName
  includes:
  - name: sockeye
    namespace: vmware-functions
  - name: cadvisor
    namespace: vmware-system
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  annotations:
    kubernetes.io/ingress.class: contour-external
  name: sockeye
  namespace: vmware-functions
spec:
  routes:
  - conditions:
    - prefix: /events
    pathRewritePolicy:
      replacePrefix:
      - replacement: /
    services:
    - name: sockeye
      port: 80
  - conditions:
    - prefix: /static
    pathRewritePolicy:
      replacePrefix:
      - replacement: /static
    services:
    - name: sockeye
      port: 80
  - conditions:
    - prefix: /ws
    enableWebsockets: true
    services:
    - name: sockeye
      port: 80
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  annotations:
    kubernetes.io/ingress.class: contour-external
  labels:
    app: cadvisor
  name: cadvisor
  namespace: vmware-system
spec:
  routes:
  - conditions:
    - prefix: /top
    services:
    - name: cadvisor
      port: 8080